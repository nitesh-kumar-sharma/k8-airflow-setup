# postgres - airflow-single-node-cluster
# Definition : deployment, persistent storage, service

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: airflow-dags
  labels:
    env: airflow-test
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
  volumeName: dag-pv

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: dag-pv
  labels:
    env: airflow-test
spec:
  storageClassName: standard
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: ////d/data/airflow/dags

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: gitsync-config
data:
  GIT_SYNC_REPO: "https://github.com/nitesh-kumar-sharma/airflow-dags"
  GIT_SYNC_BRANCH: "master"
  GIT_SYNC_ROOT: "/tmp/git"
  GIT_SYNC_DEST: "sync"
  GIT_SYNC_DEPTH: "1"
  GIT_SYNC_ONE_TIME: "false"
  GIT_SYNC_WAIT: "60"
  GIT_SYNC_USERNAME: "nitesh-kumar-sharma"
  GIT_KNOWN_HOSTS: "false"
  GIT_PASSWORD: "85$Lucky36$"

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: airflow-configmap
  labels:
    env: airflow-test
data:
  airflow.cfg: |
    [core]
    dags_folder = /usr/local/airflow/dags
    base_log_folder = /usr/local/airflow/logs
    logging_level = INFO
    executor = KubernetesExecutor
    parallelism = 32
    load_examples = False
    plugins_folder = /root/airflow/plugins

    [celery]
    broker_url =
    result_backend =

    [webserver]
    base_url = http://0.0.0.0:8080
    rbac=True
    web_server_host = 0.0.0.0
    web_server_port = 8080
    dag_default_view = tree

    [kubernetes]
    airflow_configmap = airflow-configmap
    worker_service_account_name = default
    worker_container_image_pull_policy = IfNotPresent
    worker_dags_folder = /usr/local/airflow/dags
    worker_container_repository = airflow
    delete_worker_pods = true
    git_repo = https://github.com/nitesh-kumar-sharma/airflow-dags
    git_branch = master
    git_subpath = simple
    git_user = nitesh-kumar-sharma
    git_password = 85$Lucky36$
    git_sync_root = /tmp/git
    git_dags_folder_mount_point = /usr/local/airflow/dags
    dags_volume_claim = airflow-dags
    in_cluster = True
    git_sync_container_repository = k8s.gcr.io/git-sync
    git_sync_container_tag = v3.0.1
    git_sync_init_container_name = git-sync-clone

---

apiVersion: v1
kind: Secret
metadata:
  name: git-credentials
  labels:
    env: airflow-test
data:
  GIT_SYNC_USERNAME: bml0ZXNoLWt1bWFyLXNoYXJtYQ==
  GIT_SYNC_PASSWORD: ODUkTHVja3kzNiQ=

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow
  labels:
    env: airflow-test
spec:
  replicas: 1
  selector:
    matchLabels:
      env: airflow-test
  template:
    metadata:
      labels:
        env: airflow-test
    spec:
      initContainers:
        - name: "init"
          image: nikush001/airflow
          imagePullPolicy: IfNotPresent #Always
          env:
            - name: NODE_TYPE
              value: init
          volumeMounts:
            - name: airflow-configmap
              mountPath: /root/airflow/airflow.cfg
              subPath: airflow.cfg
            - name: airflow-dags
              mountPath: /usr/local/airflow/dags
      containers:
        - name: airflow
          image: nikush001/airflow:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: NODE_TYPE
              value: worker
          envFrom:
            - configMapRef:
                name: airflow-configmap
          volumeMounts:
            - mountPath: /usr/local/airflow/dags
              name: airflow-dags
            - mountPath: /root/airflow/airflow.cfg
              name: airflow-configmap
              subPath: airflow.cfg
        - name: git-sync-clone
          image: k8s.gcr.io/git-sync:v3.0.1
          imagePullPolicy: IfNotPresent #Always
          envFrom:
            - configMapRef:
                name: gitsync-config
            - secretRef:
                name: git-credentials
          volumeMounts:
            - name: airflow-dags
              mountPath: /tmp/git
      volumes:
        - name: gitsync-config
          configMap:
            name: gitsync-config
        - name: airflow-configmap
          configMap:
            name: airflow-configmap
        - name: git-credentials
          secret:
            secretName: git-credentials
            defaultMode: 0400
        - name: airflow-dags
          persistentVolumeClaim:
            claimName: airflow-dags

---

apiVersion: v1
kind: Service
metadata:
  name: airflow
  labels:
    env: airflow-test
spec:
  type: ClusterIP
  selector:
    env: airflow-test